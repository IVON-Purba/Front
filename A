<template>
  <div id="app" class="backgroundContainer">
    <div class="phoneContainer">
      <div class="status-bar">
        <p>{{ currentTime }}</p>
        <img alt="" id="battery" src="../assets/battery.png" />
      </div>
      <div class="withBack">
        <img
          role="button"
          tabindex="0"
          alt=""
          @click="goBack"
          @keyup="goBack"
          class="backImg"
          src="../assets/뒤로가기.png"
        />
        <form action="#" method="post">
          <label for="searchInp">
            <input
              type="text"
              id="searchInp"
              name="searchInp"
              class="searchBar"
              placeholder="검색어를 입력해주세요"
              required
            />
          </label>
        </form>
        <img
          role="button"
          tabindex="0"
          alt=""
          @click="goBack"
          @keyup="goBack"
          class="backImg"
          src="../assets/bell.png"
        />
      </div>

      <!-- 공지사항 게시판 -->
      <div class="noticeBoard">
        <div class="noticeItem" v-for="(notice, index) in notices" :key="index">
          <p class="noticeTitle">{{ notice.title }}</p>
          <p class="noticeContent">{{ notice.content }}</p>
        </div>
      </div>
    </div>
  </div>
</template>

<script lang="ts">
import { defineComponent, ref, onMounted, onUnmounted } from "vue";
import { useRouter } from "vue-router";

export default defineComponent({
  name: "Announcements",
  setup() {
    const currentTime = ref<string | null>(null);
    let timer: number | NodeJS.Timeout | null = null;

    const updateTime = () => {
      const now = new Date();
      const hours = now.getHours().toString().padStart(2, "0");
      const minutes = now.getMinutes().toString().padStart(2, "0");
      currentTime.value = `${hours}:${minutes}`;
    };

    const router = useRouter();
    const goBack = () => {
      router.back();
    };

    // 가짜 공지사항 데이터
    const notices = ref([
      {
        title: "공지사항 제목 1",
        content: "공지사항 내용 1"
      },
      {
        title: "공지사항 제목 2",
        content: "공지사항 내용 2"
      },
      {
        title: "공지사항 제목 3",
        content: "공지사항 내용 3"
      }
    ]);

    onMounted(() => {
      updateTime();
      timer = setInterval(updateTime, 60000);
    });

    onUnmounted(() => {
      if (timer !== null) {
        clearInterval(timer);
      }
    });

    return { currentTime, goBack, notices };
  }
});
</script>

<style>
/* index.css 파일 import */
@import "../css/index.css";

/* 공지사항 게시판 스타일 */
.noticeBoard {
  margin-top: 20px;
  padding: 20px;
  border: 1px solid #ccc;
  border-radius: 5px;
}

.noticeItem {
  margin-bottom: 10px;
  padding: 10px;
  background-color: #f5f5f5;
  border: 1px solid #ddd;
  border-radius: 3px;
}

.noticeTitle {
  font-weight: bold;
}

.noticeContent {
  margin-top: 5px;
}
</style>
